<Window x:Class="UI.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UI.WPF"
        xmlns:components="clr-namespace:UI.WPF.Components"
        xmlns:viewmodels="clr-namespace:UI.WPF.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{Binding MainWindowViewModel}"
        Title="MainWindow" 
        Height="{Binding ThisHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        Width="{Binding ThisWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        ResizeMode="CanResizeWithGrip"
        WindowStyle="None"
        WindowState="Normal" 
        ShowInTaskbar="True"
        >
    <Window.Triggers>
        <EventTrigger RoutedEvent="SizeChanged">
        </EventTrigger>
    </Window.Triggers>
    
    <!-- To be able to resize window without small borders on sides. -->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"
                      ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>

    <Border BorderBrush="{DynamicResource SecondaryBackground}" BorderThickness="1">

        <Grid Background="{DynamicResource MainBackground}">

            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>


            <Border Grid.Row="0" 
                    Background="Transparent"
                    MouseDown="TopRow_MouseDown"
                    Margin="0 0 0 0">
                <components:TopRow DataContext="{Binding TopRowViewModel}" />
            </Border>

            <!-- Top toolbar -->
            <Border Grid.Row="1"
                    BorderThickness="0 0 0 3"
                    BorderBrush="{DynamicResource MainBackground}"
                    Background="{DynamicResource SecondaryBackground}">

                <components:Toolbar DataContext="{Binding ToolbarViewModel}"
                                    Margin="30 0 30 0"/>

            </Border>

            <Border Grid.Row="2"
                Background="{DynamicResource SecondaryBackground}">

                <!-- Tracked Apps Section. ScrollViewer allows to be displayed scrollbar -->
                <!--<components:TrackedAppsView DataContext="{Binding TrackedAppsViewModel}"/>-->

                <ContentControl Content="{Binding Navigation.CurrentView}"/>

            </Border>


            <Border Grid.Row="3"
                    BorderThickness="0 2 0 0"
                    BorderBrush="{DynamicResource MainBackground}"
                    Background="{DynamicResource MainBackground}">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0">

                        <StackPanel Orientation="Horizontal"
                                    Margin="10 0 0 0">
                            <TextBlock Text="Last checked: "
                                       FontFamily="Cascadia Mono"
                                       FontWeight="Light"/>
                            <TextBlock Text="{Binding LastDirectorWorkDone}"
                                       FontFamily="Cascadia Mono"
                                       FontWeight="Light"/>
                        </StackPanel>
                    </Border>

                    <Border Grid.Column="1">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Right"
                                    Margin="0 0 25 0"
                                    Cursor="Hand">
                            <Button Command="{Binding OpenChangelogViewCommand}">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border" Background="{DynamicResource MainBackground}" CornerRadius="5">
                                            <ContentPresenter/>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                                
                                <TextBlock Text="{Binding AppVersion}" 
                                           FontFamily="Cascadia Mono"
                                           FontWeight="Light"
                                           ToolTip="View Changelog"/>
                            </Button>
                        </StackPanel>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </Border>

</Window>
